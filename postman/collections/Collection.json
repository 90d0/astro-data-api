{
	"info": {
		"_postman_id": "9f644ac3-8efc-4893-bda8-d5eec91499b3",
		"name": "Collection",
		"description": "Send and receive telegrams about observations of astronomical events.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "23206686-9f644ac3-8efc-4893-bda8-d5eec91499b3"
	},
	"item": [
		{
			"name": "telegrams",
			"item": [
				{
					"name": "{telegramId}",
					"item": [
						{
							"name": "/telegrams/:telegramId",
							"id": "1bf8b8f0-efc4-4237-9fab-561695e55b26",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/telegrams/:telegramId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telegrams",
										":telegramId"
									],
									"variable": [
										{
											"key": "telegramId",
											"value": "<string>",
											"description": "(Required) The identifier of the telegram. Short human readable like ADN231231A and ObjectId are both valid."
										}
									]
								}
							},
							"response": [
								{
									"id": "7f0cad3e-aeb2-41c1-a0e5-1750727f4864",
									"name": "The corresponding telegram",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
								},
								{
									"id": "12d837ae-97c7-4a79-a07f-5b39701bfde1",
									"name": "Bad request (e.g., malformed request syntax, invalid request message parameters, or validation error)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"id": "f26219bf-7484-409b-b337-7336f07a76ec",
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "21200bb3-7d5b-4994-a3c3-4e51c4df01b4",
									"name": "Unexpected error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "/telegrams/:telegramId",
							"id": "262060a5-8c18-47b9-9f53-c1d44113b891",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/telegrams/:telegramId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telegrams",
										":telegramId"
									],
									"variable": [
										{
											"key": "telegramId",
											"value": "<string>",
											"description": "(Required) The identifier of the telegram. Short human readable like ADN231231A and ObjectId are both valid."
										}
									]
								}
							},
							"response": [
								{
									"id": "085694c9-1480-4b8a-9fa6-1c503f0e0bea",
									"name": "Telegram successfully updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
								},
								{
									"id": "fa731f80-c048-416a-906a-fba8ce9c2b48",
									"name": "Bad request (e.g., malformed request syntax, invalid request message parameters, or validation error)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"id": "b7bb507e-6752-4c58-b7f4-4b1d97e42781",
									"name": "Unauthorized (missing or invalid authentication token)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "24da0b6d-0aab-430e-b0b9-8696e585e5d0",
									"name": "Forbidden (the user does not have the necessary permissions)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "648adcd8-acb1-4cd8-a8f6-c21ded578b38",
									"name": "Not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "2dcf3a5e-550a-474d-a287-b2a36c81afcb",
									"name": "Unexpected error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "/telegrams/:telegramId",
							"id": "3df08bee-4128-4f9c-aad0-b4dbefe2bb7e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/telegrams/:telegramId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telegrams",
										":telegramId"
									],
									"variable": [
										{
											"key": "telegramId",
											"value": "<string>",
											"description": "(Required) The identifier of the telegram. Short human readable like ADN231231A and ObjectId are both valid."
										}
									]
								}
							},
							"response": [
								{
									"id": "22c47bad-92c7-4dc9-8b26-4a4234480dd6",
									"name": "Telegram successfully updated",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
								},
								{
									"id": "f409e211-d9f2-4bbf-86e6-5aeab55355b0",
									"name": "Bad request (e.g., malformed request syntax, invalid request message parameters, or validation error)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"id": "784dcb41-feee-4192-bd68-5c82f58a7f56",
									"name": "Unauthorized (missing or invalid authentication token)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "e86fa938-7b21-449f-8f9a-9bf0460f237b",
									"name": "Forbidden (the user does not have the necessary permissions)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "c03ccfb1-4cf4-49b2-a4e3-5b6fd47b115b",
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "ee50fa86-fb71-4b0a-be49-e2ef0d2a1dc1",
									"name": "Unexpected error",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "/telegrams/:telegramId",
							"id": "e4908b69-f062-4aac-9e85-a6c702f69ed7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/telegrams/:telegramId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telegrams",
										":telegramId"
									],
									"variable": [
										{
											"key": "telegramId",
											"value": "<string>",
											"description": "(Required) The identifier of the telegram. Short human readable like ADN231231A and ObjectId are both valid."
										}
									]
								}
							},
							"response": [
								{
									"id": "2e813faa-666a-4645-9730-342cbaca7cfc",
									"name": "Telegram successfully deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "1aad1596-8c6a-43a7-ad38-2ca563aaec3f",
									"name": "Bad request (e.g., malformed request syntax, invalid request message parameters, or validation error)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"id": "007a0a87-2ad4-491f-9f3b-47856912c132",
									"name": "Unauthorized (missing or invalid authentication token)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "99e03789-0007-4e1b-9f15-10b105731da7",
									"name": "Forbidden (the user does not have the necessary permissions)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "2e421ab6-ee17-4dba-971b-810f0b9b0b9d",
									"name": "Not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "f42efd30-b669-4558-ba1c-de0c17100c27",
									"name": "Unexpected error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "ba5caed1-f818-44bb-b5cc-6e8587fc3af3"
				},
				{
					"name": "/telegrams",
					"id": "9f5c2572-e918-46a8-a7f3-dbc25b15919b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/telegrams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"telegrams"
							]
						}
					},
					"response": [
						{
							"id": "8ca63fee-4e66-49b0-bb6e-ebce31992720",
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/telegrams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telegrams"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"title\": \"<string>\",\n    \"authors\": \"<string>\",\n    \"body\": \"<string>\",\n    \"band\": \"<string>\",\n    \"_id\": \"<string>\",\n    \"adn_id\": \"<string>\",\n    \"user_id\": \"<string>\",\n    \"timestamp\": \"<dateTime>\",\n    \"authors_list\": [\n      {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"email\": \"<email>\",\n        \"org\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"email\": \"<email>\",\n        \"org\": \"<string>\"\n      }\n    ],\n    \"light_curve\": [\n      {\n        \"magnitude\": -96795931\n      },\n      {\n        \"magnitude\": false\n      }\n    ],\n    \"upper_limits\": [\n      {\n        \"framae\": [\n          {\n            \"RightAscension\": \"<float>\",\n            \"Declination\": \"<float>\"\n          },\n          {\n            \"RightAscension\": \"<float>\",\n            \"Declination\": \"<float>\"\n          },\n          {\n            \"RightAscension\": \"<float>\",\n            \"Declination\": \"<float>\"\n          }\n        ],\n        \"datetime\": \"<dateTime>\",\n        \"upper_limit\": \"<number>\",\n        \"exptime\": \"<number>\",\n        \"instrument\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"instrument\": \"<string>\",\n          \"observation_mode\": \"<string>\",\n          \"observatory\": {\n            \"name\": \"<string>\",\n            \"_id\": \"<string>\",\n            \"org\": \"<string>\",\n            \"country\": \"<string>\"\n          }\n        },\n        \"filter\": \"<string>\"\n      },\n      {\n        \"framae\": [\n          {\n            \"RightAscension\": \"<float>\",\n            \"Declination\": \"<float>\"\n          },\n          {\n            \"RightAscension\": \"<float>\",\n            \"Declination\": \"<float>\"\n          },\n          {\n            \"RightAscension\": \"<float>\",\n            \"Declination\": \"<float>\"\n          }\n        ],\n        \"datetime\": \"<dateTime>\",\n        \"upper_limit\": \"<number>\",\n        \"exptime\": \"<number>\",\n        \"instrument\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"instrument\": \"<string>\",\n          \"observation_mode\": \"<string>\",\n          \"observatory\": {\n            \"name\": \"<string>\",\n            \"_id\": \"<string>\",\n            \"org\": \"<string>\",\n            \"country\": \"<string>\"\n          }\n        },\n        \"filter\": \"<string>\"\n      }\n    ],\n    \"categories\": [\n      {\n        \"text\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"color\": \"<string>\"\n      },\n      {\n        \"text\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"color\": \"<string>\"\n      }\n    ],\n    \"references\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"title\": \"<string>\",\n    \"authors\": \"<string>\",\n    \"body\": \"<string>\",\n    \"band\": \"<string>\",\n    \"_id\": \"<string>\",\n    \"adn_id\": \"<string>\",\n    \"user_id\": \"<string>\",\n    \"timestamp\": \"<dateTime>\",\n    \"authors_list\": [\n      {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"email\": \"<email>\",\n        \"org\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"email\": \"<email>\",\n        \"org\": \"<string>\"\n      }\n    ],\n    \"light_curve\": [\n      {\n        \"magnitude\": -35473446.89461287\n      },\n      {\n        \"magnitude\": -23379142\n      }\n    ],\n    \"upper_limits\": [\n      {\n        \"framae\": [\n          {\n            \"RightAscension\": \"<float>\",\n            \"Declination\": \"<float>\"\n          },\n          {\n            \"RightAscension\": \"<float>\",\n            \"Declination\": \"<float>\"\n          },\n          {\n            \"RightAscension\": \"<float>\",\n            \"Declination\": \"<float>\"\n          }\n        ],\n        \"datetime\": \"<dateTime>\",\n        \"upper_limit\": \"<number>\",\n        \"exptime\": \"<number>\",\n        \"instrument\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"instrument\": \"<string>\",\n          \"observation_mode\": \"<string>\",\n          \"observatory\": {\n            \"name\": \"<string>\",\n            \"_id\": \"<string>\",\n            \"org\": \"<string>\",\n            \"country\": \"<string>\"\n          }\n        },\n        \"filter\": \"<string>\"\n      },\n      {\n        \"framae\": [\n          {\n            \"RightAscension\": \"<float>\",\n            \"Declination\": \"<float>\"\n          },\n          {\n            \"RightAscension\": \"<float>\",\n            \"Declination\": \"<float>\"\n          },\n          {\n            \"RightAscension\": \"<float>\",\n            \"Declination\": \"<float>\"\n          }\n        ],\n        \"datetime\": \"<dateTime>\",\n        \"upper_limit\": \"<number>\",\n        \"exptime\": \"<number>\",\n        \"instrument\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"instrument\": \"<string>\",\n          \"observation_mode\": \"<string>\",\n          \"observatory\": {\n            \"name\": \"<string>\",\n            \"_id\": \"<string>\",\n            \"org\": \"<string>\",\n            \"country\": \"<string>\"\n          }\n        },\n        \"filter\": \"<string>\"\n      }\n    ],\n    \"categories\": [\n      {\n        \"text\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"color\": \"<string>\"\n      },\n      {\n        \"text\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"color\": \"<string>\"\n      }\n    ],\n    \"references\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
						},
						{
							"id": "f88f5aae-50a6-4929-b392-b36e600cf98c",
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/telegrams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telegrams"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "8708cb8c-2c34-4e4a-a83a-64906d9de381",
							"name": "Unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/telegrams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telegrams"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "/telegrams",
					"id": "f0e492a4-eee5-4500-9ee3-9b8e9f3234d0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/telegrams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"telegrams"
							]
						}
					},
					"response": [
						{
							"id": "2d7ae458-0ea8-41dd-8222-eb820065ed60",
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/telegrams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telegrams"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"id": "c1c04a2a-9605-41dc-b23b-1f6b6edd4256",
							"name": "Bad request (e.g., malformed request syntax, invalid request message parameters, or validation error)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/telegrams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telegrams"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"id": "dd4c28c4-8949-4658-82ec-bedadad27586",
							"name": "Unauthorized (missing or invalid authentication token)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/telegrams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telegrams"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "64ebfeb8-6004-40f2-b3ea-159d2896b090",
							"name": "Forbidden (the user does not have the necessary permissions)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/telegrams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telegrams"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "0b1175ca-4eaf-4a9b-aa99-e9daceb55042",
							"name": "Unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"magnitude\": 98359141\n    },\n    {\n      \"magnitude\": -63254382\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        },\n        {\n          \"RightAscension\": \"<float>\",\n          \"Declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"upper_limit\": \"<number>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/telegrams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telegrams"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "b6516f5d-f440-42c3-91fb-0d1e7a184b08"
		},
		{
			"name": "mock-objects",
			"item": [
				{
					"name": "{mockObjectId}",
					"item": [
						{
							"name": "/mock-objects/:mockObjectId",
							"id": "d83aa8a9-bb07-40a7-9d91-4114b7b9cb7c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mock-objects",
										":mockObjectId"
									],
									"variable": [
										{
											"key": "mockObjectId",
											"value": "<string>",
											"description": "(Required) The identifier of the object"
										}
									]
								}
							},
							"response": [
								{
									"id": "f89e6bbc-a7e1-486c-b2f1-11f9bd856cf4",
									"name": "The corresponding object",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"id": "ac406bed-7482-43c8-b7b5-baa7ef0342b3",
									"name": "Bad request (e.g., malformed request syntax, invalid request message parameters, or validation error)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"id": "ae8f0723-9121-4050-8408-f12cd8488bb5",
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "a15945a6-8ee7-49db-b42b-211b2a355487",
									"name": "Unexpected error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "/mock-objects/:mockObjectId",
							"id": "24c678b9-2370-4f9b-8efa-49cc03ab65c2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mock-objects",
										":mockObjectId"
									],
									"variable": [
										{
											"key": "mockObjectId",
											"value": "<string>",
											"description": "(Required) The identifier of the object"
										}
									]
								}
							},
							"response": [
								{
									"id": "4d3a9e04-97ec-46e4-89c1-6b010050d420",
									"name": "Object successfully updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"id": "f58fd5d5-7d4d-4ee3-a290-e72381eeae3e",
									"name": "Bad request (e.g., malformed request syntax, invalid request message parameters, or validation error)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"id": "360160ca-18f4-415f-a4d2-77a42a500017",
									"name": "Unauthorized (missing or invalid authentication token)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "86c133be-b1a8-4c32-a1f4-706bc32e9810",
									"name": "Forbidden (the user does not have the necessary permissions)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "6364d563-56d3-4e81-b76f-f0c89fffbce9",
									"name": "Not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "7d4a0e1b-4c2e-400b-b9e5-c734876a5fbe",
									"name": "Unexpected error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "/mock-objects/:mockObjectId",
							"id": "689f55cf-a530-4493-b51a-cfd8f7d1d09d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mock-objects",
										":mockObjectId"
									],
									"variable": [
										{
											"key": "mockObjectId",
											"value": "<string>",
											"description": "(Required) The identifier of the object"
										}
									]
								}
							},
							"response": [
								{
									"id": "1fb181b0-e740-4981-adbb-eb2b807cdb25",
									"name": "Object successfully updated",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"id": "e2e6fe19-dd7b-4af8-8ab8-a61374423e54",
									"name": "Bad request (e.g., malformed request syntax, invalid request message parameters, or validation error)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"id": "5d237ed7-3adc-4a95-b569-863a75069978",
									"name": "Unauthorized (missing or invalid authentication token)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "68a2e65d-f90a-40c5-a5f9-e9357d8578b0",
									"name": "Forbidden (the user does not have the necessary permissions)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "10f61239-1bdc-44bb-9df0-a8b8575b6d34",
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "4b28d2bb-5ea5-4960-b419-ca9a27e5c1e5",
									"name": "Unexpected error",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "/mock-objects/:mockObjectId",
							"id": "2b210516-39a4-4dcf-a4fe-5f479a4db39d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mock-objects",
										":mockObjectId"
									],
									"variable": [
										{
											"key": "mockObjectId",
											"value": "<string>",
											"description": "(Required) The identifier of the object"
										}
									]
								}
							},
							"response": [
								{
									"id": "9dc5987e-8a89-4df5-ab17-5f30aaeb62ae",
									"name": "Object successfully deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "1367b1eb-6247-45ee-9d4a-fb92f243df35",
									"name": "Bad request (e.g., malformed request syntax, invalid request message parameters, or validation error)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"id": "0fdd546a-f7b7-48e1-8184-252b09e36b29",
									"name": "Unauthorized (missing or invalid authentication token)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "b523116b-fa35-4d98-8dbf-c9bc90ffa528",
									"name": "Forbidden (the user does not have the necessary permissions)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "58787bb1-1c87-4408-a5ab-c637b7b7094c",
									"name": "Not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "63449373-661a-4564-848f-28020202c3ff",
									"name": "Unexpected error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "66ef200e-f49a-4f40-8d99-629d06a1892a"
				},
				{
					"name": "/mock-objects",
					"id": "0492b81a-c0f7-48a9-abbd-7b313097c7ff",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/mock-objects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mock-objects"
							]
						}
					},
					"response": [
						{
							"id": "02f08646-7dbe-4f10-849b-5017a2044472",
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mock-objects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mock-objects"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"<string>\",\n    \"_id\": \"<string>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"_id\": \"<string>\"\n  }\n]"
						},
						{
							"id": "36811488-d61c-4f3e-b954-9a0a1c147872",
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mock-objects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mock-objects"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "f39ea40a-638e-4477-a280-f25773e01aad",
							"name": "Unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mock-objects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mock-objects"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "/mock-objects",
					"id": "9a245ee5-bd87-4777-889b-e5467a144f28",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/mock-objects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mock-objects"
							]
						}
					},
					"response": [
						{
							"id": "6d715289-cb57-44d6-9652-547782dcfa34",
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mock-objects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mock-objects"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
						},
						{
							"id": "e5de164a-e280-408d-ab49-6f0c2e104d2f",
							"name": "Bad request (e.g., malformed request syntax, invalid request message parameters, or validation error)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mock-objects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mock-objects"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"id": "6cb5d7dc-67ba-49c0-aef8-6625f2d449d7",
							"name": "Unauthorized (missing or invalid authentication token)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mock-objects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mock-objects"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "e08e5178-eb16-47d1-a09d-dc3dea2bf0f2",
							"name": "Forbidden (the user does not have the necessary permissions)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mock-objects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mock-objects"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "c9b0d805-ce58-4fa4-86dd-2c7e3099fdf8",
							"name": "Unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mock-objects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mock-objects"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "494b977a-3c7a-4f99-8436-c8e7172ee27d"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearerToken}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"id": "11f9a731-5f5c-4783-989b-eb1ee9bd9c99",
			"key": "baseUrl",
			"value": "https://api.astrodatanet.org/api/v1"
		}
	]
}