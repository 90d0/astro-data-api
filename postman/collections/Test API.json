{
	"info": {
		"_postman_id": "c197cc5e-3cc4-44dc-867b-41e890504c36",
		"name": "Test API",
		"description": "Send and receive telegrams about observations of astronomical events.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "23206686-c197cc5e-3cc4-44dc-867b-41e890504c36"
	},
	"item": [
		{
			"name": "telegrams",
			"item": [
				{
					"name": "{telegramId}",
					"item": [
						{
							"name": "/telegrams/:telegramId",
							"id": "da0655f2-cbb3-4e9a-bf96-c8f47b6e318c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/telegrams/:telegramId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telegrams",
										":telegramId"
									],
									"variable": [
										{
											"key": "telegramId",
											"value": "<string>",
											"description": "(Required) The identifier of the telegram. Short human readable like ADN231231A and ObjectId are both valid."
										}
									]
								}
							},
							"response": [
								{
									"id": "6da78ef9-6ee6-4a6d-855d-32d156316164",
									"name": "The corresponding telegram",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "http://localhost:8080/api/v1/telegrams/:telegramId",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
								},
								{
									"id": "c5e95ad5-8642-4ab7-899b-5da8e32a6c5b",
									"name": "Bad request (e.g., malformed request syntax, invalid request message parameters, or validation error)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"id": "af0ad863-2f10-40b1-87c4-f567ed967ae3",
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "95af20e6-5ad0-4bfe-98be-76c18aa1638e",
									"name": "Unexpected error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "/telegrams/:telegramId",
							"id": "c034430a-2909-4ba8-a2f4-cff7be102127",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/telegrams/:telegramId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telegrams",
										":telegramId"
									],
									"variable": [
										{
											"key": "telegramId",
											"value": "<string>",
											"description": "(Required) The identifier of the telegram. Short human readable like ADN231231A and ObjectId are both valid."
										}
									]
								}
							},
							"response": [
								{
									"id": "080bedc5-8160-45b0-85b6-e7a79d35db70",
									"name": "Telegram successfully updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/v1/telegrams/:telegramId",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
								},
								{
									"id": "7542179c-a352-4fca-b868-07cfa0820769",
									"name": "Bad request (e.g., malformed request syntax, invalid request message parameters, or validation error)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"id": "a09f0596-1c31-485f-a5c6-26b889e9f96e",
									"name": "Unauthorized (missing or invalid authentication token)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "5b1a70e5-ba7d-47a9-a445-23a3465179af",
									"name": "Forbidden (the user does not have the necessary permissions)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "d8bbb8f1-9c2c-4a13-bfd5-52abd2254487",
									"name": "Not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "8d5151a0-253e-49e0-9092-4f42e7713840",
									"name": "Unexpected error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "/telegrams/:telegramId",
							"id": "57989511-658b-42f0-a9fc-b83e20651675",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/telegrams/:telegramId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telegrams",
										":telegramId"
									],
									"variable": [
										{
											"key": "telegramId",
											"value": "<string>",
											"description": "(Required) The identifier of the telegram. Short human readable like ADN231231A and ObjectId are both valid."
										}
									]
								}
							},
							"response": [
								{
									"id": "8a4380bc-4d9b-4663-ae85-c78d87b5396e",
									"name": "Telegram successfully updated",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/v1/telegrams/:telegramId",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
								},
								{
									"id": "fc463433-1cbf-4982-b193-a15ec37349a8",
									"name": "Bad request (e.g., malformed request syntax, invalid request message parameters, or validation error)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"id": "8f7489d8-39f9-46a4-bd65-79d6f952b92d",
									"name": "Unauthorized (missing or invalid authentication token)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "9c849b5c-463c-4ea1-ae9c-7711940104cb",
									"name": "Forbidden (the user does not have the necessary permissions)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "223240d0-ba12-4c40-bfd8-ca59ffa986a9",
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "fc309bd0-5abc-466b-8a13-45b8a17c9822",
									"name": "Unexpected error",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "/telegrams/:telegramId",
							"id": "8106718f-3c9a-4b06-8330-d1d8e89f2f6a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/telegrams/:telegramId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telegrams",
										":telegramId"
									],
									"variable": [
										{
											"key": "telegramId",
											"value": "<string>",
											"description": "(Required) The identifier of the telegram. Short human readable like ADN231231A and ObjectId are both valid."
										}
									]
								}
							},
							"response": [
								{
									"id": "3d9e94cc-52ce-4de5-893e-a9d76ddc8d3f",
									"name": "Telegram successfully deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "http://localhost:8080/api/v1/telegrams/:telegramId",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "1a087e2d-29da-41b7-937f-ea43b4e489e6",
									"name": "Bad request (e.g., malformed request syntax, invalid request message parameters, or validation error)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"id": "1034c038-e581-4ef6-bda6-30e35ca53d95",
									"name": "Unauthorized (missing or invalid authentication token)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "e6828ddc-8c4b-49c5-b95e-5d9783d1dbbf",
									"name": "Forbidden (the user does not have the necessary permissions)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "3ba02b73-3b36-456e-af51-fa5a9d76c03d",
									"name": "Not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "b42d5ac1-ce27-47f5-acd2-920bffd03963",
									"name": "Unexpected error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/telegrams/:telegramId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telegrams",
												":telegramId"
											],
											"variable": [
												{
													"key": "telegramId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "1c6a1f73-407b-4abf-8aae-c278c1d5204f"
				},
				{
					"name": "/telegrams",
					"id": "22913871-92d5-4f84-970e-3654202a314a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/telegrams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"telegrams"
							]
						}
					},
					"response": [
						{
							"id": "5abb61e5-6e85-4bfe-a62f-f4aa207c93fe",
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:8080/api/v1/telegrams",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"telegrams"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"title\": \"<string>\",\n    \"authors\": \"<string>\",\n    \"body\": \"<string>\",\n    \"band\": \"<string>\",\n    \"_id\": \"<string>\",\n    \"adn_id\": \"<string>\",\n    \"user_id\": \"<string>\",\n    \"timestamp\": \"<dateTime>\",\n    \"event_datetime\": \"<dateTime>\",\n    \"authors_list\": [\n      {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"email\": \"<email>\",\n        \"org\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"email\": \"<email>\",\n        \"org\": \"<string>\"\n      }\n    ],\n    \"light_curve\": [\n      {\n        \"coordinates\": {\n          \"declination\": \"<float>\",\n          \"error\": 162,\n          \"right_ascension\": \"<float>\"\n        },\n        \"datetime\": \"<dateTime>\",\n        \"exptime\": \"<number>\",\n        \"instrument\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"instrument\": \"<string>\",\n          \"observation_mode\": \"<string>\",\n          \"observatory\": {\n            \"name\": \"<string>\",\n            \"_id\": \"<string>\",\n            \"org\": \"<string>\",\n            \"country\": \"<string>\"\n          }\n        },\n        \"filter\": \"<string>\",\n        \"magnitude\": \"<number>\",\n        \"upper_limit\": \"<number>\"\n      },\n      {\n        \"coordinates\": {\n          \"declination\": \"<float>\",\n          \"error\": 95,\n          \"right_ascension\": \"<float>\"\n        },\n        \"datetime\": \"<dateTime>\",\n        \"exptime\": \"<number>\",\n        \"instrument\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"instrument\": \"<string>\",\n          \"observation_mode\": \"<string>\",\n          \"observatory\": {\n            \"name\": \"<string>\",\n            \"_id\": \"<string>\",\n            \"org\": \"<string>\",\n            \"country\": \"<string>\"\n          }\n        },\n        \"filter\": \"<string>\",\n        \"magnitude\": \"<number>\",\n        \"upper_limit\": \"<number>\"\n      }\n    ],\n    \"upper_limits\": [\n      {\n        \"framae\": [\n          {\n            \"right_ascension\": \"<float>\",\n            \"declination\": \"<float>\"\n          },\n          {\n            \"right_ascension\": \"<float>\",\n            \"declination\": \"<float>\"\n          },\n          {\n            \"right_ascension\": \"<float>\",\n            \"declination\": \"<float>\"\n          }\n        ],\n        \"datetime\": \"<dateTime>\",\n        \"exptime\": \"<number>\",\n        \"instrument\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"instrument\": \"<string>\",\n          \"observation_mode\": \"<string>\",\n          \"observatory\": {\n            \"name\": \"<string>\",\n            \"_id\": \"<string>\",\n            \"org\": \"<string>\",\n            \"country\": \"<string>\"\n          }\n        },\n        \"filter\": \"<string>\",\n        \"upper_limit\": \"<number>\"\n      },\n      {\n        \"framae\": [\n          {\n            \"right_ascension\": \"<float>\",\n            \"declination\": \"<float>\"\n          },\n          {\n            \"right_ascension\": \"<float>\",\n            \"declination\": \"<float>\"\n          },\n          {\n            \"right_ascension\": \"<float>\",\n            \"declination\": \"<float>\"\n          }\n        ],\n        \"datetime\": \"<dateTime>\",\n        \"exptime\": \"<number>\",\n        \"instrument\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"instrument\": \"<string>\",\n          \"observation_mode\": \"<string>\",\n          \"observatory\": {\n            \"name\": \"<string>\",\n            \"_id\": \"<string>\",\n            \"org\": \"<string>\",\n            \"country\": \"<string>\"\n          }\n        },\n        \"filter\": \"<string>\",\n        \"upper_limit\": \"<number>\"\n      }\n    ],\n    \"categories\": [\n      {\n        \"text\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"color\": \"<string>\"\n      },\n      {\n        \"text\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"color\": \"<string>\"\n      }\n    ],\n    \"references\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"title\": \"<string>\",\n    \"authors\": \"<string>\",\n    \"body\": \"<string>\",\n    \"band\": \"<string>\",\n    \"_id\": \"<string>\",\n    \"adn_id\": \"<string>\",\n    \"user_id\": \"<string>\",\n    \"timestamp\": \"<dateTime>\",\n    \"event_datetime\": \"<dateTime>\",\n    \"authors_list\": [\n      {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"email\": \"<email>\",\n        \"org\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"email\": \"<email>\",\n        \"org\": \"<string>\"\n      }\n    ],\n    \"light_curve\": [\n      {\n        \"coordinates\": {\n          \"declination\": \"<float>\",\n          \"error\": 43,\n          \"right_ascension\": \"<float>\"\n        },\n        \"datetime\": \"<dateTime>\",\n        \"exptime\": \"<number>\",\n        \"instrument\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"instrument\": \"<string>\",\n          \"observation_mode\": \"<string>\",\n          \"observatory\": {\n            \"name\": \"<string>\",\n            \"_id\": \"<string>\",\n            \"org\": \"<string>\",\n            \"country\": \"<string>\"\n          }\n        },\n        \"filter\": \"<string>\",\n        \"magnitude\": \"<number>\",\n        \"upper_limit\": \"<number>\"\n      },\n      {\n        \"coordinates\": {\n          \"declination\": \"<float>\",\n          \"error\": 92,\n          \"right_ascension\": \"<float>\"\n        },\n        \"datetime\": \"<dateTime>\",\n        \"exptime\": \"<number>\",\n        \"instrument\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"instrument\": \"<string>\",\n          \"observation_mode\": \"<string>\",\n          \"observatory\": {\n            \"name\": \"<string>\",\n            \"_id\": \"<string>\",\n            \"org\": \"<string>\",\n            \"country\": \"<string>\"\n          }\n        },\n        \"filter\": \"<string>\",\n        \"magnitude\": \"<number>\",\n        \"upper_limit\": \"<number>\"\n      }\n    ],\n    \"upper_limits\": [\n      {\n        \"framae\": [\n          {\n            \"right_ascension\": \"<float>\",\n            \"declination\": \"<float>\"\n          },\n          {\n            \"right_ascension\": \"<float>\",\n            \"declination\": \"<float>\"\n          },\n          {\n            \"right_ascension\": \"<float>\",\n            \"declination\": \"<float>\"\n          }\n        ],\n        \"datetime\": \"<dateTime>\",\n        \"exptime\": \"<number>\",\n        \"instrument\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"instrument\": \"<string>\",\n          \"observation_mode\": \"<string>\",\n          \"observatory\": {\n            \"name\": \"<string>\",\n            \"_id\": \"<string>\",\n            \"org\": \"<string>\",\n            \"country\": \"<string>\"\n          }\n        },\n        \"filter\": \"<string>\",\n        \"upper_limit\": \"<number>\"\n      },\n      {\n        \"framae\": [\n          {\n            \"right_ascension\": \"<float>\",\n            \"declination\": \"<float>\"\n          },\n          {\n            \"right_ascension\": \"<float>\",\n            \"declination\": \"<float>\"\n          },\n          {\n            \"right_ascension\": \"<float>\",\n            \"declination\": \"<float>\"\n          }\n        ],\n        \"datetime\": \"<dateTime>\",\n        \"exptime\": \"<number>\",\n        \"instrument\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"instrument\": \"<string>\",\n          \"observation_mode\": \"<string>\",\n          \"observatory\": {\n            \"name\": \"<string>\",\n            \"_id\": \"<string>\",\n            \"org\": \"<string>\",\n            \"country\": \"<string>\"\n          }\n        },\n        \"filter\": \"<string>\",\n        \"upper_limit\": \"<number>\"\n      }\n    ],\n    \"categories\": [\n      {\n        \"text\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"color\": \"<string>\"\n      },\n      {\n        \"text\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"color\": \"<string>\"\n      }\n    ],\n    \"references\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
						},
						{
							"id": "bcd42e76-1230-4719-bfa5-680604319ec5",
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/telegrams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telegrams"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "02ef6de9-52d8-453f-a0c5-4c4e3a969862",
							"name": "Unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/telegrams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telegrams"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "/telegrams",
					"id": "07f9ac55-7c75-4499-b0ec-1f5e584b203f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event_datetime\": \"2024-06-05T14:31:19.417Z\",\n  \"title\": \"Lorem Ipsum dolor sit amet\",\n  \"authors\": \"John Doe, Jane Doe (NASA)\",\n  \"authors_list\": [\n    {\n      \"_id\": \"66127676f5c1f51ce9ffe440\",\n      \"name\": \"John Doe\",\n      \"email\": \"john.doe@nasa.gov\",\n      \"org\": \"NASA\"\n    },\n    {\n      \"_id\": \"66127676f5c1f51ce9ffe440\",\n      \"name\": \"Jane Doe\",\n      \"email\": \"jane.doe@nasa.gov\",\n      \"org\": \"NASA\"\n    }\n  ],\n  \"body\": \"At ipsum vitae est lacinia tincidunt. Maecenas elit orci,gravida ut, molestie non, venenatis vel, lorem. Sedlacinia. Suspendisse potenti. Sed ultricies cursuslectus. In id magna sit amet nibh suspicit euismod.Integer enim. Donec sapien ante, accumsan ut,sodales commodo, auctor quis, lacus. Maecenas a elitlacinia urna posuere sodales. Curabitur pede pede,molestie id, blandit vitae, varius ac, purus. Mauris atipsum vitae est lacinia tincidunt. Maecenas elit orci, gravida ut, molestie non, venenatis vel,lorem. Sed lacinia. Suspendisse potenti. Sed ultrucies cursus lectus.\",\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"right_ascension\": 10.6845833,\n        \"declination\": 41.2691667,\n        \"error\": 3.167\n      },\n      \"datetime\": \"2024-06-05T14:31:19.417Z\",\n      \"magnitude\": 3.44,\n      \"upper_limit\": 17.9,\n      \"exptime\": 60,\n      \"instrument\": {\n        \"_id\": \"66127676f8c9f51ce9ffe042\",\n        \"name\": \"MASTER-SAAO\",\n        \"instrument\": \"Robotic telescope\",\n        \"observation_mode\": \"Optical\",\n        \"observatory\": {\n          \"_id\": \"66127676f7c9f51ce9ffe540\",\n          \"name\": \"South African Astronomical Observatory\",\n          \"org\": \"National Research Foundation\",\n          \"country\": \"South Africa\"\n        }\n      },\n      \"filter\": \"C\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": 10,\n          \"declination\": 40\n        },\n        {\n          \"right_ascension\": 11,\n          \"declination\": 41\n        },\n        {\n          \"right_ascension\": 10,\n          \"declination\": 42\n        }\n      ],\n      \"datetime\": \"2024-06-05T14:31:19.417Z\",\n      \"upper_limit\": 17.6,\n      \"exptime\": 60,\n      \"instrument\": {\n        \"_id\": \"66127676f8c9f51ce9ffe042\",\n        \"name\": \"MASTER-SAAO\",\n        \"instrument\": \"Robotic telescope\",\n        \"observation_mode\": \"Optical\",\n        \"observatory\": {\n          \"_id\": \"66127676f7c9f51ce9ffe540\",\n          \"name\": \"South African Astronomical Observatory\",\n          \"org\": \"National Research Foundation\",\n          \"country\": \"South Africa\"\n        }\n      },\n      \"filter\": \"C\"\n    }\n  ],\n  \"band\": \"Optical\",\n  \"categories\": [\n    {\n      \"_id\": \"66127676f8c9f11ce0ffe042\",\n      \"text\": \"galaxy\",\n      \"color\": \"blue\"\n    }\n  ],\n  \"references\": [\n    \"ADN220903\",\n    \"10.1109/5.771073\",\n    \"GCN 36060\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/telegrams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"telegrams"
							]
						}
					},
					"response": [
						{
							"id": "b01b5d5b-1cb7-4bf4-80f8-0fb2d6332dcc",
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/v1/telegrams",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"telegrams"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"id": "2d3dae0e-d728-4578-9e55-1fcd326057cc",
							"name": "Bad request (e.g., malformed request syntax, invalid request message parameters, or validation error)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/telegrams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telegrams"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"id": "de2d34cf-d188-4f84-a8d0-9d8540b5e023",
							"name": "Unauthorized (missing or invalid authentication token)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/telegrams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telegrams"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "a96ef73f-2c39-4751-90a1-5182da7a52dd",
							"name": "Forbidden (the user does not have the necessary permissions)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/telegrams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telegrams"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "7139bde8-3ad0-4554-b81d-0677b04818fb",
							"name": "Unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"authors\": \"<string>\",\n  \"body\": \"<string>\",\n  \"band\": \"<string>\",\n  \"_id\": \"<string>\",\n  \"adn_id\": \"<string>\",\n  \"user_id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"event_datetime\": \"<dateTime>\",\n  \"authors_list\": [\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"org\": \"<string>\"\n    }\n  ],\n  \"light_curve\": [\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 14,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"coordinates\": {\n        \"declination\": \"<float>\",\n        \"error\": 66,\n        \"right_ascension\": \"<float>\"\n      },\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"magnitude\": \"<number>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"upper_limits\": [\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    },\n    {\n      \"framae\": [\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        },\n        {\n          \"right_ascension\": \"<float>\",\n          \"declination\": \"<float>\"\n        }\n      ],\n      \"datetime\": \"<dateTime>\",\n      \"exptime\": \"<number>\",\n      \"instrument\": {\n        \"name\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"instrument\": \"<string>\",\n        \"observation_mode\": \"<string>\",\n        \"observatory\": {\n          \"name\": \"<string>\",\n          \"_id\": \"<string>\",\n          \"org\": \"<string>\",\n          \"country\": \"<string>\"\n        }\n      },\n      \"filter\": \"<string>\",\n      \"upper_limit\": \"<number>\"\n    }\n  ],\n  \"categories\": [\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"text\": \"<string>\",\n      \"_id\": \"<string>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"references\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/telegrams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telegrams"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "9cc3225a-0a8b-46f5-849c-242dafdb2114"
		},
		{
			"name": "mock-objects",
			"item": [
				{
					"name": "{mockObjectId}",
					"item": [
						{
							"name": "/mock-objects/:mockObjectId",
							"id": "50a95fcc-2d67-446c-87e8-a3942f5ec819",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mock-objects",
										":mockObjectId"
									],
									"variable": [
										{
											"key": "mockObjectId",
											"value": "<string>",
											"description": "(Required) The identifier of the object"
										}
									]
								}
							},
							"response": [
								{
									"id": "7ee02526-55f5-4f4d-bf93-fe947f535eae",
									"name": "The corresponding object",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "http://localhost:8080/api/v1/mock-objects/:mockObjectId",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"id": "b4b73fec-5cf6-4b32-b648-81df90fe0e37",
									"name": "Bad request (e.g., malformed request syntax, invalid request message parameters, or validation error)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"id": "9d4c821f-162e-47b0-b2df-37e0250c416e",
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "36e87c92-5803-478d-85de-f0f7b950b572",
									"name": "Unexpected error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "/mock-objects/:mockObjectId",
							"id": "edecf9ec-b11e-4606-b270-c20aed52beab",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mock-objects",
										":mockObjectId"
									],
									"variable": [
										{
											"key": "mockObjectId",
											"value": "<string>",
											"description": "(Required) The identifier of the object"
										}
									]
								}
							},
							"response": [
								{
									"id": "c6f75a9c-376b-421d-84ea-4cc4a6577dd7",
									"name": "Object successfully updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/v1/mock-objects/:mockObjectId",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"id": "6de397a0-e960-4da3-b80c-2d525c42d048",
									"name": "Bad request (e.g., malformed request syntax, invalid request message parameters, or validation error)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"id": "ae7252c3-a686-4a4f-a3bb-88102543e882",
									"name": "Unauthorized (missing or invalid authentication token)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "82bd76af-65f0-49a6-af34-b68f61b81644",
									"name": "Forbidden (the user does not have the necessary permissions)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "57528d51-599e-40fa-a9e2-4de6e0f00b8c",
									"name": "Not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "50072b53-6f53-4552-b65e-20caee935e78",
									"name": "Unexpected error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "/mock-objects/:mockObjectId",
							"id": "1e815ec8-ece3-4cdf-9103-ede123adb62f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mock-objects",
										":mockObjectId"
									],
									"variable": [
										{
											"key": "mockObjectId",
											"value": "<string>",
											"description": "(Required) The identifier of the object"
										}
									]
								}
							},
							"response": [
								{
									"id": "b30c68a1-dbdb-474e-bf44-77c0d1220d03",
									"name": "Object successfully updated",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/v1/mock-objects/:mockObjectId",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"id": "cdd21338-bf19-465a-b6c9-9e6409f44996",
									"name": "Bad request (e.g., malformed request syntax, invalid request message parameters, or validation error)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"id": "721df5f2-eff0-4ed0-b0b3-898fd76aef6d",
									"name": "Unauthorized (missing or invalid authentication token)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "d9b2280e-b869-4d62-b2b4-af0e76720228",
									"name": "Forbidden (the user does not have the necessary permissions)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "9f3de1e4-2e9b-4fe6-aed2-a0da35633910",
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "2d2e8fa7-70ac-4e12-8f2b-65ad7efe472b",
									"name": "Unexpected error",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "/mock-objects/:mockObjectId",
							"id": "ef8cb7bb-8453-4c58-a100-357b338b3776",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mock-objects",
										":mockObjectId"
									],
									"variable": [
										{
											"key": "mockObjectId",
											"value": "<string>",
											"description": "(Required) The identifier of the object"
										}
									]
								}
							},
							"response": [
								{
									"id": "629c4eea-100c-4b1e-8537-34ca274704fc",
									"name": "Object successfully deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "http://localhost:8080/api/v1/mock-objects/:mockObjectId",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "902ac2a2-ebcf-4849-8a89-08e7349517ec",
									"name": "Bad request (e.g., malformed request syntax, invalid request message parameters, or validation error)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"id": "ef95930d-4824-4040-8a6d-9c6ec7b1290c",
									"name": "Unauthorized (missing or invalid authentication token)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "c5e8e31c-1a28-4333-84b7-4bb2e7b6414c",
									"name": "Forbidden (the user does not have the necessary permissions)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "4da4b962-f2a5-468d-bc4b-4927f5d736f3",
									"name": "Not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"id": "1d656a6f-57c7-473a-b15a-e1a2c37d083f",
									"name": "Unexpected error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mock-objects/:mockObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mock-objects",
												":mockObjectId"
											],
											"variable": [
												{
													"key": "mockObjectId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "e62956b6-be2d-43b8-b756-91f1cf09bb1d"
				},
				{
					"name": "/mock-objects",
					"id": "0d305e3e-3eec-410a-ab33-fadc5ca24948",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/mock-objects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mock-objects"
							]
						}
					},
					"response": [
						{
							"id": "33f7e676-a1eb-4a56-947d-b43ad995c4a6",
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:8080/api/v1/mock-objects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"mock-objects"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "d1c0c918-cc6f-48f2-8e73-c1a5d6345ab9",
							"name": "Unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mock-objects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mock-objects"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "/mock-objects",
					"id": "f911a340-898a-476c-8161-64f71c8ae751",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/mock-objects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mock-objects"
							]
						}
					},
					"response": [
						{
							"id": "cc7427f5-f4cb-4bc1-ba8b-f7b60f344c1f",
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/v1/mock-objects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"mock-objects"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
						},
						{
							"id": "b882203b-d657-40fe-9272-011559666a1a",
							"name": "Bad request (e.g., malformed request syntax, invalid request message parameters, or validation error)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mock-objects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mock-objects"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"id": "21700b33-ea45-44e0-a8d8-7f7a71143f0d",
							"name": "Unauthorized (missing or invalid authentication token)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mock-objects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mock-objects"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "b9193e53-2698-4a07-9708-d72198021f81",
							"name": "Forbidden (the user does not have the necessary permissions)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mock-objects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mock-objects"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"id": "e50cf04f-24c1-4733-9439-418ad2689120",
							"name": "Unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mock-objects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mock-objects"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "5add0342-b2d5-40e8-94c9-aa9e65a9d805"
		},
		{
			"name": "version",
			"item": [
				{
					"name": "/version",
					"id": "5a58a8c8-1c07-414a-9780-3d4c362f7b4c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"version"
							]
						}
					},
					"response": [
						{
							"id": "66825c54-d70f-4480-9172-29163d9ac4c0",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:8080/api/v1/version",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"version"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"version\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "48bb5c87-0a9a-4da9-a1c3-dc521617cfa6"
		},
		{
			"name": "passport",
			"item": [
				{
					"name": "/passport",
					"id": "d37f82d6-0ccd-4c3c-9d4d-202ae440eb67",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/passport",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"passport"
							]
						}
					},
					"response": [
						{
							"id": "8556e3af-cfae-47da-ac15-037ff8898811",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:8080/api/v1/passport",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"passport"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"payload\": {\n    \"user_id\": \"<string>\",\n    \"user_email\": \"<email>\",\n    \"user_role\": \"<string>\",\n    \"iat\": \"<integer>\",\n    \"exp\": \"<integer>\",\n    \"sub\": \"<string>\"\n  }\n}"
						},
						{
							"id": "fd7d285f-0185-4c71-b476-e4236da84559",
							"name": "Unauthorized (missing or invalid authentication token)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/passport",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"passport"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "2cb9dcb0-5307-46ab-9907-13b9c294a348"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjYxMjc2NzZmNWMxZjUxY2U5ZmZlNDQwIiwidXNlcl9lbWFpbCI6InVzZXJAZXhhbXBsZS5jb20iLCJpYXQiOjE3MTc2MTk0NDEsImV4cCI6MTcxNzcwNTg0MSwic3ViIjoibG9naW4tcGFzc3dvcmQifQ.nzV_4PUedW9ojIG3qS2RHFm53pNFBz_V_0a4KAsdC-M",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "71ae6a96-a786-4e82-a820-f0d7a5d2299d",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "5acfeb27-b6e3-46c3-b3de-66c982fbd157",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}